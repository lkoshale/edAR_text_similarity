# -*- coding: utf-8 -*-
"""universal_google_encoder_test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15OEyT5ulh4v5bXYMndc13zgK27Q1ZMJU
"""

!pip3 install --quiet "tensorflow>=1.7"

!pip3 install --quiet tensorflow-hub
!pip3 install --quiet seaborn

!rm edAR_text_similarity
!git clone https://github.com/lkoshale/edAR_text_similarity.git

import tensorflow as tf
import tensorflow_hub as hub
import matplotlib.pyplot as plt
import numpy as np
import os
import pandas as pd
import re
import seaborn as sns

df = pd.read_csv('edAR_text_similarity/data/question_sample.csv')

X = df.iloc[:, :-1].values

module_url = "https://tfhub.dev/google/universal-sentence-encoder/2" #@param ["https://tfhub.dev/google/universal-sentence-encoder/2", "https://tfhub.dev/google/universal-sentence-encoder-large/3"]

msg1=[]
msg2=[]
for i in range(0,200):
  msg1.append(X[i,3])
  msg2.append(X[i,4])

# Import the Universal Sentence Encoder's TF Hub module
embed = hub.Module(module_url)

# Reduce logging output.
tf.logging.set_verbosity(tf.logging.ERROR)

with tf.Session() as session:
  session.run([tf.global_variables_initializer(), tf.tables_initializer()])
  msg1_embed = session.run(embed(msg1))
  msg2_embed = session.run(embed(msg2))

y_pred = np.zeros((200,1))
y = df.iloc[:,5].values
for i in range(0,200):
  y_pred[i] = np.inner(msg1_embed[i],msg2_embed[i])

for i in range(0,200):
  if y_pred[i] > 0.90:
    y_pred[i] = 1
  else:
    y_pred[i] = 0

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y, y_pred)